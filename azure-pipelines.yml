trigger:
  - main

variables:
  terraformVersion: "1.5.5"
  azureServiceConnection: "your-azure-service-connection-name"
  resourceGroupName: "resume-rg"
  storageAccountName: "resumeweb$(Build.BuildId)"

stages:
  - stage: Provision
    displayName: "Provision Infrastructure"
    jobs:
      - job: Terraform
        displayName: "Terraform Apply"
        steps:
          - task: TerraformInstaller@0
            displayName: "Install Terraform"
            inputs:
              terraformVersion: $(terraformVersion)

          - task: TerraformCLI@0
            displayName: "Terraform Init"
            inputs:
              command: "init"
              workingDirectory: "$(System.DefaultWorkingDirectory)"
              backendType: "azurerm"
              backendServiceArm: $(azureServiceConnection)
              backendAzureRmResourceGroupName: $(resourceGroupName)
              backendAzureRmStorageAccountName: "tfstate$(Build.BuildId)"
              backendAzureRmContainerName: "tfstate"
              backendAzureRmKey: "terraform.tfstate"

          - task: TerraformCLI@0
            displayName: "Terraform Plan"
            inputs:
              command: "plan"
              workingDirectory: "$(System.DefaultWorkingDirectory)"
              commandOptions: "-out=tfplan"
              environmentServiceName: $(azureServiceConnection)

          - task: TerraformCLI@0
            displayName: "Terraform Apply"
            inputs:
              command: "apply"
              workingDirectory: "$(System.DefaultWorkingDirectory)"
              commandOptions: "tfplan"
              environmentServiceName: $(azureServiceConnection)

  - stage: Deploy
    displayName: "Deploy Resume"
    dependsOn: Provision
    jobs:
      - job: Deploy
        steps:
          - task: AzureFileCopy@4
            displayName: "Upload Resume Files"
            inputs:
              SourcePath: "$(System.DefaultWorkingDirectory)/resume-files"
              azureSubscription: $(azureServiceConnection)
              Destination: "AzureBlob"
              storage: $(storageAccountName)
              ContainerName: "$web"
